library(QPackage)
library(QPackage)
library(QPackage)
library(QPackage)
library(QPackage)
install.packages('roxygen')
install.packages('roxygen2')
library(roxygen2)
library(QPackage)
library(stats)
library(QPackage)
library(QPackage)
library(QPackage)
library(QPackage)
library(QPackage)
library(QPackage)
library(QPackage)
library(QPackage)
library(QPackage)
library(QPackage)
q <- QTable()
library(QPackage)
q <- QTable()
library(QPackage)
q <- QTable()
q <- QTable(mtcars)
q
slots(q)
slot(q)
q$idCol
names(mtcars)
CheckId(q, "mpg")
is.data.frame(q)
library(QPackage)
q <- QTable(mtcars)
CheckId(q, "mpg")
library(QPackage)
q <- ReadCSV('../QPackage//data/test.csv', header=T, sep="\t", dec=".")
library(QPackage)
q <- ReadCSV('../QPackage//data/test.csv', header=T, sep="\t", dec=".")
q
q$idCol
q@idCol
length(q@idCol)
nchar(q@idCol)
library(QPackage)
q <- ReadCSV('../QPackage//data/test.csv', header=T, sep="\t", dec=".")
colnames(q)
SetId(q, "t1")
library(QPackage)
library(QPackage)
q <- ReadCSV('../QPackage//data/test.csv', header=T, sep="\t", dec=".")
SetId(q, "t1")
q <- SetId(q, "t1")
install.packages('knitr')
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library(QPackage)
q <- ReadCSV('../QPackage//data/test.csv', header=T, sep="\t", dec=".", idCol="t1")
q
install.packages('dplyr')
library(dplyr)
?data_frame
r <- read.csv('../QPackage//data/test.csv', header=T, sep="\t", dec=".")
data_frame(r)
r
a <- 1:5
data_frame(a, b = a * 2)
a <- 1:5
tt<-data_frame(a, b = a * 2)
tt
data.frame(tt)
qtable(tt)
QTable(tt)
table_df(QTable(tt))
tbl_df(QTable(tt))
mtcars
r <- read.csv('../QPackage//data/test.csv', header=T, sep="\t", dec=".")
library(dplyr)
tbl_df(r)
which(r$t1 == 1)
w <- which(r$t1 == 1)
r[w,]
r[1:2,]
r[1:5,]
r1 <- r[w,]
r1
r1[1:10,]
r1[1:5,]
df = data.frame('a' = rnorm(10), 'b' = runif(10), 'c' = letters[1:10])
df
as.numeric(rownames(df))
df
rownames(df)
df$rownumber <- as.numeric(rownames(df))
df
which(df$c < 'c')
which(df$c == 'c')
df[which(df$c == 'c'),]
methods(class="data.frame")
cbind.data.frame
library(dplyr)
dplyr::glimpse(iris)
utils::View(iris)
cases
install.packages(tidyr)
install.packages('tidyr')
library(tidyr)
library(devtools)
library(devtool)
devtools::install_github("hadley/devtools")
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
devtools::install_github("hadley/devtools")
devtools::install_github("rstudio/EDAWR")
library(EDAWR)
cases
tidyr::gather(cases, "year", n, 2:4 )
storms
tidyr::separate(storms, date, c("y", "m", "d"))
?tidyr::separate
data
?tidyr::unite
edit(mtcars)
View(mtcars)
?fix
?save
?load
dput(mtcars, 'xxx')
getwd()
baz <- function(x) {
# Subtract from one
1-x
}
dput(baz)
?load
edit(mtcars)
fix(mtcars)
install.packages('RecordLinkage')
library(RecordLinkage)
RLData500
data(RLdata500)
View(RLdata500)
View(RLdata500)
compare.dedup(RLdata500)
rpairs <- compare.dedup(RLdata500)
rpairs$pairs
library(dplyr)
tbl_df(rpairs$pairs)
rpairs <- compare.dedup(RLdata500, blockfld = 1)
rpairs
tbl_df(rpairs$pairs)
rpairs <- compare.dedup(RLdata500, blockfld = c(1,2)
)
tbl_df(rpairs$pairs)
combs(c(1:5), 2)
?cobn
?combn
combn(c(1:5), 2)
combn(c(1:5), 2, simplify=F)
?write.csv
