acc_svm <- cv_kfold(labeled_feat_vec, 10, svm)
feat_table[, "lang_lang_nmw"]
feat_table[, "lang_lang_nmw"]
feat_table[, "lang_lang_swg"]
feat_table[, "editionDescr_editionDescr_swg"]
model
debugSource('/scratch/pradap/r-work/r-packages/Q-RPackage/QPackage/R/crossvalidation.R')
source('/scratch/pradap/r-work/r-packages/Q-RPackage/QPackage/R/crossvalidation.R')
library(QPackage)
model <- train_model(labeled_feat_vec, randomForest)
candset_feat_vec <- convert_to_feature_vecs(walmart, bowker, cand_set, feature_list)
candset_fv_with_labels<- predict_label(candset_feat_vec, model)
View(merge(cand_set,candset_fv_with_labels))
install.packages('knitr')
library(knitr)
devtools::use_vignette("qpkg-vignette")
library(QPackage)
library(QPackage)
data(bowker_bk_dataset)
write_csv(bowker_bk_dataset, file="/scratch/pradap/bowker.csv")
?write.csv
library(QPackage)
write_csv(bowker_bk_dataset, file="/scratch/pradap/bowker.csv")
write_csv(bowker_bk_dataset, file="/scratch/pradap/bowker.csv")
source('/scratch/pradap/r-work/r-packages/Q-RPackage/QPackage/R/export-data.R')
write_csv(bowker_bk_dataset, file="/scratch/pradap/bowker.csv")
source('/scratch/pradap/r-work/r-packages/Q-RPackage/QPackage/R/export-data.R')
write_csv(bowker_bk_dataset, file="/scratch/pradap/bowker.csv")
Inf - Inf
mean(c(1, NULL, 3))
mean(c(1, NA, 3))
library(QPackage)
tok_whitespace("pradap mur")
tok_whitespace("pradap m ur")
library(QPackage)
remove.packages(rJava)
remove.packages(rJava, lib.loc="/scratch/pradap/r-libs/")
remove.packages("rJava", lib.loc="/scratch/pradap/r-libs/")
?remove.packages
remove.packages("rJava", lib="/scratch/pradap/r-libs/")
remove.packages("rJava")
.libPaths
.libPaths()
install.packages("stringdist")
library(stringdist)
?stringdist::qgrams
library(rJava)
<<<<<<< Updated upstream
library(QPac)
library(QPackage)
?stringdist::qgrams
qgrams('', 3)
qgrams('', q = 3)
qgrams(NA, q = 3)
is.na(qgrams(NA, q = 3))
ss <- (qgrams(NA, q = 3))
ss
is.null(ss)
class(s)
class(ss)
View(ss)
ss <- (qgrams(NULL, q = 3))
ss
ss[,1]
ss[1,1]
ss[1]
ss[1,]
is.integer(ss[1,])
.libPaths()
Q
exit()
quit()
.libPaths
.libPaths()
find.package("rJava")
install.packages("rJava")
.jinit()
.jcall("java/lang/System", "S", "getProperty", "java.runtime.version")
?install.packages
?devtools::install_github
tuple(10,20)
library(QPackage)
library(QPackage)
install.packages('rJava')
library(QPackage)
remove.packages('rJava')
install.packages('rJava')
library(QPackage)
install.packages('rJava')
library(QPackage)
library(QPackage)
library(QPackage)
tuple(10)
tuple("title" = "This is a product title", "brand" = "Product brand")
t <- tuple("title" = "This is a product title", "brand" = "Product brand")
t
print(t)
library(QPackage)
<<<<<<< Updated upstream
library(devtools)
devtools::use_package("e1071", type = "Imports")
devtools::use_package("randomForest", type = "Imports")
devtools::use_package("rpart", type = "Imports")
?svm
library(e1071)
?svm
feat_lkp_names... <- QPackage:::feat_lkp_names...
auto_gen_table... <- QPackage:::auto_gen_table...
feat_lkp_names...
blocker_names... <- c("attr_equiv_block")
supv_learning_modes... <- c("rpart","svm", "randomforest", "nnet", "boosting",
"bagging",
"naivebayes")
supv_learning_modes...
save(supv_learning_modes..., blocker_names..., auto_gen_table..., feat_lkp_names..., file = "R/sysdata.rda")
?randomforest
?randomForest
library(randomForest)
?randomForest
library(ipred)
install.packages('ipred')
library(ipred)
?nnet
?bagging
?ada
library(ada)
?ada
?naiveBayes
?predict.randomForest
?predict.ada
?predict.naiveBayes
library(QPackage)
library(QPacka)
library(QPackage)
data(test_label_cset)
data(bowker_bk_dataset)
data(walmart_bk_dataset)
walmart <- walmart_bk_dataset
bowker <- bowker_bk_dataset
attr1 <- "isbn" # from walmart dataset
attr2 <- "isbn" # from bowker dataset
# do blocking
cand_set <- apply_block(walmart, bowker, attr_equiv_block, attr1, attr2,
col_names_a = list("title", "author", "binding", "publisher", "pages"),
col_names_b = list("title", "author", "binding", "publisher", "pages")
)
feature_list <- create_features(walmart, bowker,
list(c("title", "title"),
c("numAuthors", "numAuthors"),
c("binding", "binding")))
labeled_feat_vec <- convert_to_feature_vecs(walmart, bowker, label_cset, feature_list)
save(labeled_feat_vec, file = "data/labeled_feat_vec.RData")
kfold_cv(labeled_feat_vec, 10, method = "svm")
?svm
library(QPackage)
kfold_cv(labeled_feat_vec, 10, method = "svm")
kfold_cv(labeled_feat_vec, 10, method = "randomforest")
source('/scratch/pradap/r-work/r-packages/Q-RPackage-devel/QPackage/R/crossvalidation.R')
kfold_cv(labeled_feat_vec, 10, method = "randomforest")
kfold_cv(labeled_feat_vec, 10, method = "nnet")
library(ipred)
kfold_cv(labeled_feat_vec, 10, method = "nnet")
?nnet
library(nnet)
?nnet
kfold_cv(labeled_feat_vec, 10, method = "nnet")
source('/scratch/pradap/r-work/r-packages/Q-RPackage-devel/QPackage/R/crossvalidation.R')
kfold_cv(labeled_feat_vec, 10, method = "nnet")
?predict.nnet
source('/scratch/pradap/r-work/r-packages/Q-RPackage-devel/QPackage/R/crossvalidation.R')
kfold_cv(labeled_feat_vec, 10, method = "nnet")
kfold_cv(labeled_feat_vec, 10, method = "nnet")
kfold_cv(labeled_feat_vec, 10, method = "nnet")
kfold_cv(labeled_feat_vec, 10, method = "nnet")
kfold_cv(labeled_feat_vec, 10, method = "nnet")
kfold_cv(labeled_feat_vec, 10, method = "nnet")
kfold_cv(labeled_feat_vec, 10, method = "nnet")
kfold_cv(labeled_feat_vec, 10, method = "nnet")
kk <- kfold_cv(labeled_feat_vec, 10, method = "nnet")
ll
kk
source('/scratch/pradap/r-work/r-packages/Q-RPackage-devel/QPackage/R/crossvalidation.R')
kk <- kfold_cv(labeled_feat_vec, 10, method = "nnet")
?nnet
source('/scratch/pradap/r-work/r-packages/Q-RPackage-devel/QPackage/R/crossvalidation.R')
kk <- kfold_cv(labeled_feat_vec, 10, method = "nnet")
library(QPackage)
kk <- kfold_cv(labeled_feat_vec, 10, method = "nnet")
predictions
facor(predictions, levels = c(0, 1))
factor(predictions, levels = c(0, 1))
debugSource('/scratch/pradap/r-work/r-packages/Q-RPackage-devel/QPackage/R/crossvalidation.R')
debugSource('/scratch/pradap/r-work/r-packages/Q-RPackage-devel/QPackage/R/crossvalidation.R')
kk <- kfold_cv(labeled_feat_vec, 10, method = "nnet")
debugSource('/scratch/pradap/r-work/r-packages/Q-RPackage-devel/QPackage/R/crossvalidation.R')
debugSource('/scratch/pradap/r-work/r-packages/Q-RPackage-devel/QPackage/R/crossvalidation.R')
kk <- kfold_cv(labeled_feat_vec, 10, method = "nnet")
debugSource('/scratch/pradap/r-work/r-packages/Q-RPackage-devel/QPackage/R/crossvalidation.R')
library(QPackage)
kk <- kfold_cv(labeled_feat_vec, 10, method = "nnet")
predictions
p <- as.data.frame(predictions)
p
x[[folds[[i]]]]
x[folds[[i]], "label"]
as.factor(p)
as.vector(p)
as.factor(p)
pp <- as.vector(p)
as.factor(pp)
p[, "predictions"]
debugSource('/scratch/pradap/r-work/r-packages/Q-RPackage-devel/QPackage/R/crossvalidation.R')
source('/scratch/pradap/r-work/r-packages/Q-RPackage-devel/QPackage/R/crossvalidation.R')
library(QPackage)
source('/scratch/pradap/r-work/r-packages/Q-RPackage-devel/QPackage/R/crossvalidation.R')
kk <- kfold_cv(labeled_feat_vec, 10, method = "nnet")
predictions
debugSource('/scratch/pradap/r-work/r-packages/Q-RPackage-devel/QPackage/R/crossvalidation.R')
kk <- kfold_cv(labeled_feat_vec, 10, method = "nnet")
kk <- kfold_cv(labeled_feat_vec, 10, method = "nnet")
x[folds[[i]], "label"]
?as.factor
debugSource('/scratch/pradap/r-work/r-packages/Q-RPackage-devel/QPackage/R/crossvalidation.R')
kk <- kfold_cv(labeled_feat_vec, 10, method = "nnet")
debugSource('/scratch/pradap/r-work/r-packages/Q-RPackage-devel/QPackage/R/crossvalidation.R')
kk <- kfold_cv(labeled_feat_vec, 10, method = "nnet")
predictions
num_total
source('/scratch/pradap/r-work/r-packages/Q-RPackage-devel/QPackage/R/crossvalidation.R')
kk <- kfold_cv(labeled_feat_vec, 10, method = "nnet")
kk
kk <- kfold_cv(labeled_feat_vec, 10, method = "rpart")
kk
kk <- kfold_cv(labeled_feat_vec, 10, method = "randomforest")
kk
kk <- kfold_cv(labeled_feat_vec, 10, method = "randomforest")
kk
kk <- kfold_cv(labeled_feat_vec, 5, method = "randomforest")
kk
kk <- kfold_cv(labeled_feat_vec, 5, method = "svm")
kk
kk <- kfold_cv(labeled_feat_vec, 5, method = "bagging")
kk
kk <- kfold_cv(labeled_feat_vec, 5, method = "boosting")
kk
kk <- kfold_cv(labeled_feat_vec, 5, method = "naivebayes")
source('/scratch/pradap/r-work/r-packages/Q-RPackage-devel/QPackage/R/crossvalidation.R')
kk <- kfold_cv(labeled_feat_vec, 5, method = "naivebayes")
kk
kk <- kfold_cv(labeled_feat_vec, 5, method = "naivebayes")
kk
kk <- kfold_cv(labeled_feat_vec, 10, method = "naivebayes")
kk
kk <- kfold_cv(labeled_feat_vec, 10, method = "rpart")
kk
kk <- kfold_cv(labeled_feat_vec, 10, method = "svm")
kk
source('/scratch/pradap/r-work/r-packages/Q-RPackage-devel/QPackage/R/crossvalidation.R')
library(QPackage)
library(caret)
load('../../test_labeled_feat_vec.RData')
labeled_feat_vec[, "label"] <- as.factor(labeled_feat_vec[, "label"])
labeled_df <- data.frame(labeled_feat_vec)
labeled_df[, "label"] <- as.factor(labeled_df[, "label"])
tt_rpart <- train(label ~ ., data = labeled_df, trControl = trainControl("cv"), method = "rpart")
tt_rpart
tt_rpart
attributes(tt_rpart)
attr(tt_rpart, "pred")
tt$final_model
tt_rpart$final_model
tt_rpart$finalModel
tt_rpart$results
tt_rpart$bestTune
tt_rpart$call
tt_rpart$terms
predict
?predict
class(tt_rpart)
?predict.train
tt_rpart$tuneValue
predict(tt_rpart, labeled_df[3:16])
tt_rpart <- train(label ~ ., data = labeled_df[, 3:16], trControl = trainControl("cv"), method = "rpart")
colnames(labeled_df)
tt_rpart <- train(label ~ ., data = labeled_df[, 3:17], trControl = trainControl("cv"), method = "rpart")
tt_rpart
predict(tt_rpart, labeled_df[, 3:16])
predict(tt_rpart)
predict(tt_rpart, type = "prob")
predict(tt_rpart, type = "class")
predict(tt_rpart, data = labeled_df[, 3:16], type = "prob")
predict(tt_rpart, data = labeled_df[, 3:16], type = "ra")
predict(tt_rpart, data = labeled_df[, 3:16], type = "raw")
predict(tt_rpart,  type = "raw")
predict(tt_rpart,  type = "probs")
tt_r <- predict(tt_rpart)
plotClassProbs(tt_r)
tt_rpart <- train(label ~ ., data = labeled_df[, 3:17], trControl = trainControl("cv"), method = "ada")
tt_rpart
tt_rpart$finalModel
tt_rpart <- train(label ~ ., data = labeled_df[, 3:17], trControl = trainControl("cv"), method = "nnet")
tt_rpart$results
class(tt_rpart$results)
tt_rpart <- train(label ~ ., data = labeled_df[, 3:17], trControl = trainControl("cv"), method = "nb")
library(QPackage)
show_simfuns()
data("walmart_bk_dataset")
data("bowker_bk_dataset")
View(bowker_bk_dataset)
fix(bowker_bk_dataset)
tuple("name" = "mur", "fel" = "saranam")
t1 <- tuple("name" = "mur", "fel" = "saranam")
print.tuple(t1) {}
print(t1)
t1 <- tuple(name = "mur", fel = "saranam")
t1
names(T1)
names(t1)
source('~/Documents/Research/R-Package/Q-RPackage/QPackage/R/tuple.R')
t1 <- tuple(name = "mur", fel = "saranam")
print(t1)
source('~/Documents/Research/R-Package/Q-RPackage/QPackage/R/tuple.R')
print(t1)
source('~/Documents/Research/R-Package/Q-RPackage/QPackage/R/tuple.R')
print(t1)
source('~/Documents/Research/R-Package/Q-RPackage/QPackage/R/tuple.R')
print(t1)
source('~/Documents/Research/R-Package/Q-RPackage/QPackage/R/tuple.R')
print(t1)
source('~/Documents/Research/R-Package/Q-RPackage/QPackage/R/tuple.R')
print(t1)
t1$name
t1
names(t1)
t1$name
?t1
ll <- list(k  = 10,  j  = 11)
ll
source('~/Documents/Research/R-Package/Q-RPackage/QPackage/R/tuple.R')
t1 <- tuple(name = "mur", fel = "saranam")
source('~/Documents/Research/R-Package/Q-RPackage/QPackage/R/tuple.R')
t1 <- tuple(name = "mur", fel = "saranam")
t1
t1$name
t1 <- tuple(name = "mur", fel = "saranam")
ll
ll
debugSource('~/Documents/Research/R-Package/Q-RPackage/QPackage/R/tuple.R')
debugSource('~/Documents/Research/R-Package/Q-RPackage/QPackage/R/tuple.R')
t1 <- tuple(name = "mur", fel = "saranam")
source('~/Documents/Research/R-Package/Q-RPackage/QPackage/R/tuple.R')
t1 <- tuple(name = "mur", fel = "saranam")
source('~/Documents/Research/R-Package/Q-RPackage/QPackage/R/tuple.R')
t1 <- tuple(name = "mur", fel = "saranam")
source('~/Documents/Research/R-Package/Q-RPackage/QPackage/R/tuple.R')
t1 <- tuple(name = "mur", fel = "saranam")
t1
names(t1)
t1 <- tuple(list(name = "mur", fel = "saranam")
)
t1
?t1
source('~/Documents/Research/R-Package/Q-RPackage/QPackage/R/tuple.R')
source('~/Documents/Research/R-Package/Q-RPackage/QPackage/R/tuple.R')
t1 <- tuple(list(name = "mur", fel = "saranam")
)
t1
library(QPackage)
t1 <- tuple(list(name = "mur", fel = "saranam"))
t1
t1 <- list(name = "hi")
t1
class(t1) <- "tuple"
t1
class(t1) <- c("tuple", "list")
t1
t1 <- list(name = "hi")
class(t1) <- c("tuple", "list")
t1
print(t1)
class(t1) <- c("list")
t1
class(t1) <- c("list", "tuple")
t1
t1
t1 <- tuple(list(name = "mur", fel = "saranam"))
t1
print(t1)
library(QPackage)
print(t1
)
source('~/Documents/Research/R-Package/Q-RPackage/QPackage/R/tuple.R')
print(t1)
source('~/Documents/Research/R-Package/Q-RPackage/QPackage/R/tuple.R')
print(t1)
t1
data.frame(t1)
t1 <- data.frame(t)
t1 <- data.frame(t1)
t1$name
t1 <- data.frame(t1, stringsAsFactors = F)
t1
t1$name
t1 <- tuple(list(name = "mur", fel = "saranam"))
t2 <- data.frame(t1)
print(t2)
t2$name
t2 <- data.frame(t1, stringsAsFactors = F)
t2
t2$name
t2$fel
source('~/Documents/Research/R-Package/Q-RPackage/QPackage/R/tuple.R')
t1 <- tuple(list(name = "mur", fel = "saranam"))
t1
str(t1)
source('~/Documents/Research/R-Package/Q-RPackage/QPackage/R/tuple.R')
t1 <- tuple(list(name = "mur", fel = "saranam"))
print(t1)
source('~/Documents/Research/R-Package/Q-RPackage/QPackage/R/tuple.R')
print(t1)
library(QPackage)
t1
print(t1)
t1
t1$name
library(QPackage)
print.tuple <- function(t) {}
print.tuple <- function(t) {}
print.tuple <- function(t) {
data.frame(t)
}
print(T1)
print(t1)
t
t1
t1$name
print(t1)
library(QPackage)
t
t1
class(t1)
t1 <- tuple("n" = "nn")
t1 <- tuple("n" = "nn", "kk" = "kk")
t1
t1 <- tuple(list("n" = "nn", "kk" = "kk"))
t1
tuple
t1
t <- tuple("nn" = "n", "kk" = "k")
library(QPackage)
t <- tuple("nn" = "n", "kk" = "k")
t
print.tuple <- function(t) {
data.frame(t)
}
t
print(t)
print(t)
?tuple
library(QPackage)
?tuple
??tuple
source('~/Documents/Research/R-Package/Q-RPackage/QPackage/R/qtable.R')
library(QPackage)
?read.csv
library(QPackage)
library(QPackage)
?read.csv
library(QPackage)
library(QPackage)
library(QPackage)
library(QPackage)
?set_id
?write.csv
?fix
library(QPackage)
library(QPackage)
library(QPackage)
#'   "attr_equiv_block", the blocking function is not invoked for every tuple pair
library(QPackage)
?sample
?sample_qtable
library(QPackage)
?sample_qtable
library(QPackage)
?sample_qtable
library(QPackage)
library(QPackage)
?sample_qtable
?write_csv
?read_csv
library(QPackage)
?apply_block
library(QPackage)
?label_data
library(QPackage)
?sample_qtable
library(QPackage)
?create_features
?apply_block
library(QPackage)
?create_features
library(QPackage)
?apply_block
library(QPackage)
?cv_kfold
library(QPackage)
?cv_kfold
library(QPackage)
show_learners
show_learners()
library(QPackage)
